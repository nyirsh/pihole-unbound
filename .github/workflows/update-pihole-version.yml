name: Update PiHole Version

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update-version-tag:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Read current repository version
        id: read-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./VERSION

      - name: Get latest pihole tag
        id: get-latest-tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: pi-hole/docker-pi-hole
          releases-only: true

      - name: Compare tags
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: DamianReeves/write-file-action@master
        with:
          path: ./VERSION
          write-mode: overwrite
          contents: ${{ steps.get-latest-tag.outputs.tag }}

      - name: Commit & Push
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.get-latest-tag.outputs.tag }}

      - name: Set up QEMU
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: docker/setup-buildx-action@v3
            
      - name: Login to Docker Hub
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Docker build
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: PIHOLE_VERSION=${{ steps.read-version.outputs.content }}
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          tags: |
            nyirsh/pihole-unbound:latest  
            nyirsh/pihole-unbound:${{ steps.read-version.outputs.content }}

      - name: Create Release
        if: steps.read-version.outputs.content != steps.get-latest-tag.outputs.tag
        uses: softprops/action-gh-release@v1
        with:
          files: ""
          name: ${{ steps.read-version.outputs.content }}
          tag_name: ${{ steps.read-version.outputs.content }}
          draft: false
          prerelease: false
          body: |
            Updated PiHole image to ${{ steps.read-version.outputs.content }}, for a full list of changelogs please refer to [this link](https://github.com/pi-hole/docker-pi-hole/releases/tag/${{ steps.read-version.outputs.content }})
          token: ${{ secrets.PAT }}